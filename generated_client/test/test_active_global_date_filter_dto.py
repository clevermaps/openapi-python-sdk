# coding: utf-8

"""
    clevermaps-client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.active_global_date_filter_dto import ActiveGlobalDateFilterDTO  # noqa: E501

class TestActiveGlobalDateFilterDTO(unittest.TestCase):
    """ActiveGlobalDateFilterDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActiveGlobalDateFilterDTO:
        """Test ActiveGlobalDateFilterDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActiveGlobalDateFilterDTO`
        """
        model = ActiveGlobalDateFilterDTO()  # noqa: E501
        if include_optional:
            return ActiveGlobalDateFilterDTO(
                default_values = openapi_client.models.default_values_date_dto.DefaultValuesDateDTO(
                    start_date = null, 
                    end_date = null, ),
                type = 'globalDate',
                var_property = 'awat5ikwowtta-3mh2lcafqw3zhesit6mckwqaot6282x4vh'
            )
        else:
            return ActiveGlobalDateFilterDTO(
                default_values = openapi_client.models.default_values_date_dto.DefaultValuesDateDTO(
                    start_date = null, 
                    end_date = null, ),
                type = 'globalDate',
                var_property = 'awat5ikwowtta-3mh2lcafqw3zhesit6mckwqaot6282x4vh',
        )
        """

    def testActiveGlobalDateFilterDTO(self):
        """Test ActiveGlobalDateFilterDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
